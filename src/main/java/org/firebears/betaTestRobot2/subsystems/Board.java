// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.firebears.betaTestRobot2.subsystems;

import static org.firebears.betaTestRobot2.Robot.report;

import java.util.Arrays;
import java.util.List;

import com.ctre.phoenix.motorcontrol.NeutralMode;
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;

import org.firebears.betaTestRobot2.commands.DriveMotor;
import org.firebears.recording.Recordable;
import org.firebears.recording.RecordingFactory.SpeedControllerRecordable;

import edu.wpi.first.wpilibj.Preferences;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 *
 */
public class Board extends Subsystem {

    final boolean DEBUG;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    private final SpeedController motor;

    public Board() {
        Preferences config = Preferences.getInstance();
        DEBUG = config.getBoolean("debug", false);
        int motorCanID = config.getInt("board.boardMotor.canId", 2);
        motor = new WPI_TalonSRX(motorCanID);
        motor.setInverted(config.getBoolean("board.boardMotor.inverted", true));
        ((WPI_TalonSRX) motor).setNeutralMode(NeutralMode.Brake);
        report.addCAN(motorCanID, "motor", motor);
    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new DriveMotor());

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop
    }

    public void setMotor(double speed) {
        motor.set(speed);
        if (Math.abs(speed) > 0.1 && DEBUG) {
            SmartDashboard.putNumber("speed", speed);
        }
    }

    public List<Recordable> getRecordables() {
        return Arrays.asList(new SpeedControllerRecordable(motor, "motor"));
    }
}
